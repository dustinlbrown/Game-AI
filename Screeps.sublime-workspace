{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"resource",
				"resourceManager"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "/*\n * Module code goes here. Use 'module.exports' to export things:\n * module.exports = 'a thing';\n *\n * You can import it from another modules like this:\n * var mod = require('miner'); // -> 'a thing'\n */\nvar ACTIONS = {\n    HARVEST: 1,\n    DEPOSIT: 2\n};\nvar DEPOSIT_FOR = {\n    CONSTRUCTION: 1,\n    POPULATION: 2\n};\nfunction CreepRemoteCarrier(creep){\n    this.creep = creep;\n\n}\n\nCreepRemoteCarrier.prototype.init = function() {\n    this.creep.memory.role = 'CreepRemoteCarrier';\n    if (this.creep.getTargetRoom() === undefined){\n        setTargetRoom(this.creep);\n    }\n\n\n    this.act();\n\n\n};\n\nCreepRemoteCarrier.prototype.act = function(){\n\n    if(this.creep.carry.energy === this.creep.carryCapacity || this.creep.memory.action === ACTIONS.DEPOSIT){\n        this.creep.memory.action = ACTIONS.DEPOSIT;\n        this.creep.moveToHomeRoomIfSet();\n        if (this.creep.room.name === this.creep.getHomeRoom() && this.creep.memory.action === ACTIONS.DEPOSIT){\n            this.creep.depositEnergy();\n        }\n    }\n\n    if (this.creep.carry.energy < 50 || this.creep.memory.action === ACTIONS.HARVEST){\n        this.creep.memory.action = ACTIONS.HARVEST;\n        this.creep.moveToTargetRoomIfSet();\n\n        if(this.creep.room.name === this.creep.getTargetRoom()){\n            this.creep.findEnergy();\n        }\n    }\n\n};\n\n\n\n//TODO clean this up so it'll work for multiple rooms\nfunction setTargetRoom(creep, resourcemgr){\n    var miningFlags = _.filter(Game.flags, {color: COLOR_BLUE});\n    //for each flag\n    var bestSourceCount = 99;\n    var bestRoomCount = 99;\n    var bestRoomName = undefined;\n    for(var flag in miningFlags){\n        var room = Game.rooms[miningFlags[flag].pos.roomName]; //get the room object\n        \n        if (room === undefined){ //if we don't have a presence in the room, it will be undefined (aka best room ever).\n            bestRoomName = miningFlags[flag].pos.roomName;\n            break;\n        }\n\n        var sources = resourcemgr.getRemoteSources(room);\n        \n        for (var i in sources){\n            if(sources[i].minerIds === undefined){ //no need to retrieve from here as we don't have a min\n                //creep.setTargetRoom(room.roomname);\n                continue;\n            }else{\n                var occupancy = resourcemgr.getSourceOccupants(sources[i].id);\n                if (occupancy < bestSourceCount){\n                    bestSourceCount = occupancy;\n                }\n            }\n\n        }\n\n        if (bestSourceCount < bestRoomCount){\n            bestRoomCount = bestSourceCount;\n            bestRoomName = room.roomName;\n        }\n    }\n\n    //find out how many sources\n    //find out how many are occupied\n    //find least occupied source.\n    creep.setTargetRoom(bestRoomName);\n}\n\nfunction setTargetSource(creep){\n    var sources = creep.getSources();\n    var bestSourceIndex = 0;\n    var bestSourceOccupancy = 99;\n\n    for (var i in sources){\n            var sourceOccupants = creep.getSourceOccupants(sources[i].id);\n            console.log('sourceOccupants.length: ' + sourceOccupants.length);\n            if(sourceOccupants && sourceOccupants.length < bestSourceOccupancy){\n                bestSourceIndex = i;\n                bestSourceOccupancy = sourceOccupants.length;\n            }\n        }\n        return creep.setSourceOccupant(sources[bestSourceIndex].id, creep);\n\n}\n\nmodule.exports = CreepRemoteCarrier;\n",
			"file": "dist/CreepRemoteCarrier.js",
			"file_size": 3510,
			"file_write_time": 130876288129313037,
			"settings":
			{
				"buffer_size": 3397,
				"line_ending": "Windows"
			}
		},
		{
			"file": "dist/main.js",
			"settings":
			{
				"buffer_size": 1016,
				"line_ending": "Windows"
			}
		},
		{
			"file": "dist/Room.js",
			"settings":
			{
				"buffer_size": 4219,
				"line_ending": "Windows"
			}
		},
		{
			"file": "dist/CreepBase.js",
			"settings":
			{
				"buffer_size": 12826,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/**\n * Created by Dustin on 8/25/2015.\n */\nfunction Resources(room, population) {\n    this.room = room;\n    this.populationManager = population;\n}\n\n//Resources.prototype.getAvailableSources = function() {\n//    // Some kind of unit counter per resource (with Population)\n//    var srcs = this.getSources();\n//    var srcIndex = Math.floor(Math.random()*srcs.length);\n//\n//    return srcs[srcIndex];\n//};\n\n//Resources.prototype.isControllerSource = function(room, source) {\n//    var closestSource = this.room.controller.pos.findClosest(this.getSources());\n//    if (closestSource == source){\n//        return true;\n//    }\n//    return false;\n//\n//}\n\nResources.prototype.transferToControllerLink = function (link) {\n    this.link = link;\n    var controllerLink = this.room.controller.pos.findClosestByRange(FIND_MY_STRUCTURES, {\n        filter: {structureType: STRUCTURE_LINK}\n    });\n\n    if (controllerLink.id != this.link.id && controllerLink.energy < controllerLink.energyCapacity) {\n        this.link.transferEnergy(Game.getObjectById(controllerLink.id));\n    }\n\n};\n\n//Resources.prototype.occupantsByRole = function(source, role){\n//    var occupants = source.pos.findInRange(FIND_MY_CREEPS, 1);\n//    //var occupants = source.pos.findInRange(FIND_MY_CREEPS, 3, { filter: { memory: {role: role}} });\n//\n//    return occupants.length;\n//\n//}\n\nResources.prototype.assignSourceOccupant = function(creep, room){\n    if (typeof room === 'undefined'){\n        room = this.room;\n    }else{\n        room = Game.rooms[room]; //@TODO when we pass in the room, its actually the roomName (TODO clean that up)\n    }\n    //console.log(room);\n    var sources = this.getSources(room);\n    var bestSourceIndex = 0;\n    var bestSourceOccupancy = 99;\n\n\n    if (sources.length > 0){\n        for (var i in sources){\n            var sourceOccupants = this.getSourceOccupants(sources[i].id);\n            console.log('sourceOccupants.length: ' + sourceOccupants.length);\n            if(sourceOccupants && sourceOccupants.length < bestSourceOccupancy){\n                bestSourceIndex = i;\n                bestSourceOccupancy = sourceOccupants.length;\n            }\n        }\n        return this.setSourceOccupant(sources[bestSourceIndex].id, creep)\n    }else{\n        return ERR_NOT_FOUND;\n    }\n};\n\nResources.prototype.getSources = function(room) {\n    if (typeof room === 'undefined'){\n        room = this.room;\n        //console.log('getSources: room ' + room);\n    }\n\n    if(!room.memory.sources){\n        room.memory.sources = [];\n        var roomSources = room.find(FIND_SOURCES);\n        for(var i in roomSources){\n            room.memory.sources.push(roomSources[i])\n        }\n\n    }\n\n    return room.memory.sources;\n};\n\nResources.prototype.getRemoteSources = function(room){\n\n    if(!room.memory.source){\n        room.memory.sources = [];\n        var roomSources = room.find(FIND_SOURCES);\n        for(var i in roomSources){\n            room.memory.sources.push(roomSources[i])\n        }\n    }\n\n    return room.memory.sources;\n};\n\nmodule.exports = Resources;\n",
			"file": "dist/Resources.js",
			"file_size": 4632,
			"file_write_time": 130875670768335328,
			"settings":
			{
				"buffer_size": 3049,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/*\n * Module code goes here. Use 'module.exports' to export things:\n * module.exports = 'a thing';\n *\n * You can import it from another modules like this:\n * var mod = require('miner'); // -> 'a thing'\n */\n\nfunction CreepRemoteMiner(creep,resources){\n    this.creep = creep;\n    this.resourceManager = resources;\n\n\n}\n\nCreepRemoteMiner.prototype.init = function() {\n    this.creep.memory.role = 'CreepRemoteMiner';\n    if (this.creep.getTargetRoom() === undefined){\n        setTargetRoom(this.creep, this.resourceManager);\n    }\n\n    if(!this.creep.memory.hasOwnProperty('targetSourceId') && this.creep.room.name === this.creep.getTargetRoom()){\n        console.log(this.creep.name);\n        this.creep.memory.targetSourceId = this.resourceManager.assignSourceOccupant(this.creep,this.creep.getTargetRoom()); //TODO is this the right place for this?\n        console.log(this.creep.name + ' ' + Game.getObjectById(this.creep.memory.targetSourceId));\n    }\n\n    this.act();\n\n\n};\n\nCreepRemoteMiner.prototype.act = function(){\n    if (this.creep.room.name !== this.creep.getTargetRoom()){\n        this.creep.moveToTargetRoomIfSet();\n        return;\n    }\n\n    this.creep.moveTo(Game.getObjectById(this.creep.memory.targetSourceId));\n    this.creep.harvest(Game.getObjectById(this.creep.memory.targetSourceId));\n\n};\n\n//TODO clean this up so it'll work for multiple rooms\nfunction setTargetRoom(creep, resourcemgr){\n    var miningFlags = _.filter(Game.flags, {color: COLOR_BLUE});\n    //for each flag\n    var bestSourceCount = 99;\n    var bestRoomCount = 99;\n    var bestRoomName = undefined;\n    for(var flag in miningFlags){\n        var room = Game.rooms[miningFlags[flag].pos.roomName]; //get the room object\n        \n        if (typeof room === 'undefined'){ //if we don't have a presence in the room, it will be undefined (aka best room ever).\n            bestRoomName = miningFlags[flag].pos.roomName;\n            break;\n        }\n\n        var sources = resourcemgr.getRemoteSources(room);\n        \n        for (var i in sources){\n            if(sources[i].minerIds === undefined){ //no need to retrieve from here as we don't have a min\n                //creep.setTargetRoom(room.roomname);\n                bestSourceCount = 0;\n                break;\n            }else{\n                var occupancy = resourcemgr.getSourceOccupants(sources[i].id);\n                if (occupancy < bestSourceCount){\n                    bestSourceCount = occupancy;\n                }\n            }\n\n        }\n\n        if (bestSourceCount < bestRoomCount){\n            bestRoomCount = bestSourceCount;\n            bestRoomName = room.roomName;\n        }\n    }\n\n    //find out how many sources\n    //find out how many are occupied\n    //find least occupied source.\n    creep.setTargetRoom(bestRoomName);\n}\n\nfunction setTargetSource(){\n\n\n}\n\nmodule.exports = CreepRemoteMiner;\n",
			"file": "dist/CreepRemoteMiner.js",
			"file_size": 2905,
			"file_write_time": 130876273951230293,
			"settings":
			{
				"buffer_size": 2854,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 334.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 416.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/G/Documents/GitHub/Screeps/dist"
	],
	"file_history":
	[
		"/G/Documents/GitHub/Screeps/dist/Room.js",
		"/G/Documents/GitHub/Screeps/dist/population.js",
		"/G/Documents/GitHub/Screeps/dist/CreepRemoteHarvester.js",
		"/G/Documents/GitHub/Screeps/dist/CreepMiner.js",
		"/G/Documents/GitHub/Screeps/dist/CreepManager.js",
		"/G/Documents/GitHub/Screeps/dist/CreepFactory.js",
		"/G/Documents/GitHub/Screeps/dist/CreepDictionary.js",
		"/G/Documents/GitHub/Screeps/dist/CreepRemoteCarrier.js",
		"/G/Documents/GitHub/Screeps/dist/.idea/workspace.xml",
		"/G/Documents/GitHub/Screeps/dist/Resources.js",
		"/G/Documents/GitHub/Screeps/dist/main.js",
		"/G/Documents/GitHub/Screeps/dist/CreepHarvester.js",
		"/C/Users/Dustin/AppData/Roaming/Sublime Text 2/Packages/User/JavaScript.sublime-settings",
		"/C/Users/Dustin/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/G/Documents/GitHub/Screeps/dist/CreepBuilder.js",
		"/G/Documents/GitHub/Screeps/dist/_CreepActions.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"G:\\Documents\\GitHub\\Screeps\\dist",
			"G:\\Desktop\\Screeps-master\\dist",
			"G:\\Desktop\\Screeps-master\\dist\\units"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"harvester",
			"Harvester",
			"Harveseter",
			"harveseter",
			"Harvester",
			"occupantIds",
			"    \n",
			"room",
			"roleId",
			"rampartHits",
			"creep",
			"Creep",
			"creep",
			"WORK",
			"MOVE"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"miner",
			"Miner",
			"miner",
			"Miner"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "dist/CreepRemoteCarrier.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3397,
						"regions":
						{
						},
						"selection":
						[
							[
								3355,
								3355
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "dist/main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1016,
						"regions":
						{
						},
						"selection":
						[
							[
								234,
								234
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "dist/Room.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 4219,
						"regions":
						{
						},
						"selection":
						[
							[
								394,
								394
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "dist/CreepBase.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12826,
						"regions":
						{
						},
						"selection":
						[
							[
								4558,
								4558
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 979.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "dist/Resources.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3049,
						"regions":
						{
						},
						"selection":
						[
							[
								3020,
								3020
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 1395.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "dist/CreepRemoteMiner.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2854,
						"regions":
						{
						},
						"selection":
						[
							[
								848,
								848
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 25.0
	},
	"pinned_build_system": "",
	"project": "Screeps.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 190.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
